plugins {
    id "com.android.application"
    id 'org.jetbrains.kotlin.android'
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.expenses"
    compileSdk 34   // Ensure this matches your Flutter SDK version
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.expenses"
        minSdkVersion 23  // You've correctly set this
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
         multiDexEnabled true

    }

      signingConfigs {
        debug {
            storeFile file("C:/Users/aman gupta/debug.keystore") // Default debug keystore
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }

        // If you want to set up release signing, define it here:
        // release {
        //     storeFile file("path/to/your/release.keystore")
        //     storePassword "your-store-password"
        //     keyAlias "your-key-alias"
        //     keyPassword "your-key-password"
        // }
    }


      buildTypes {
        release {
            minifyEnabled true
            // Use debug signingConfig if release config is not defined yet
            signingConfig signingConfigs.debug
            // If you have a release config, uncomment below:
            // signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation platform('com.google.firebase:firebase-bom:32.0.0') // Firebase BOM
    implementation 'com.google.firebase:firebase-analytics' // Firebase Analytics
    implementation 'androidx.multidex:multidex:2.0.1' // Multidex support
     implementation('org.jetbrains.kotlin:kotlin-stdlib-common:1.6.0') 


    // //  Add Firebase Firestore, Auth, and others as needed
    // implementation 'com.google.firebase:firebase-auth-ktx'
    // implementation 'com.google.firebase:firebase-firestore-ktx'

    // Add Kotlin coroutines libraries if necessary
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3"

}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.gms.google-services'